/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentacion;

import dao.CatalogoTrabajoDAO;
import dao.ClienteDAO;
import dao.VendedorDAO;
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import modelo.CanceleriaFijaDetalle;
import modelo.CatalogoTrabajo;
import modelo.Cliente;
import modelo.Cotizacion;
import modelo.Material;
import modelo.PuertaAbatibleDetalle;
import modelo.TipoCanceleria;
import modelo.TipoPuerta;
import modelo.TipoVentana;
import modelo.Vendedor;
import modelo.VentanaDetalle;
import negocio.CotizacionBO;
import utils.Conexion;

/**
 *
 * @author User
 */
public class frmCrearCotizacion extends javax.swing.JFrame {

    /**
     * Creates new form frmCrearCotizacion
     */
    private List<CatalogoTrabajo> catalogoTrabajos;
    private List<Cliente> clientes;
    private Vendedor vendedorPorDefecto;
    private JPanel panelDetallesDinamicos;

    private List<Material> materialesDisponibles;

    public frmCrearCotizacion() {
        initComponents();
        cargarVendedorPorDefecto();
        panelDetallesDinamicos = new JPanel();
        panelDetallesDinamicos.setLayout(new BoxLayout(panelDetallesDinamicos, BoxLayout.Y_AXIS));
        scrollDetallesDinamicos.setViewportView(panelDetallesDinamicos);
        scrollDetallesDinamicos.setPreferredSize(new Dimension(900, 250));
        cargarClientes();
        cargarCatalogo();
        cargarTiposTrabajo();
        cargarMaterialesDisponibles();
        txtBuscarCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                filtrarClientes(txtBuscarCliente.getText());
            }
        });

    }

    private void cargarCatalogo() {
        this.catalogoTrabajos = new ArrayList<>();
        try (Connection con = Conexion.getConnection()) {
            CatalogoTrabajoDAO dao = new CatalogoTrabajoDAO(con);
            this.catalogoTrabajos = dao.obtenerTodos();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al cargar el catálogo de trabajos.");
        }
    }

    private void cargarVendedorPorDefecto() {
        try (Connection conexion = Conexion.getConnection()) {
            VendedorDAO vendedorDAO = new VendedorDAO(conexion);
            // Simplemente obtenemos el primer vendedor de la lista
            List<Vendedor> todos = vendedorDAO.obtenerTodos();
            if (todos != null && !todos.isEmpty()) {
                vendedorPorDefecto = todos.get(0); // Guarda el primer vendedor encontrado
            } else {
                // Esto es crucial. Si no hay vendedores, el programa no podrá guardar.
                JOptionPane.showMessageDialog(this, "Error crítico: No hay vendedores registrados en la base de datos.", "Error de Configuración", JOptionPane.ERROR_MESSAGE);
                btnGuardar.setEnabled(false); // Deshabilita el botón de guardar
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar el vendedor por defecto: " + ex.getMessage());
            btnGuardar.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelTitulo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        iconoTitulo = new javax.swing.JLabel();
        pnlNuevaCotizacion = new javax.swing.JPanel();
        tituloNuevaCotizacion = new javax.swing.JLabel();
        scrollDetallesDinamicos = new javax.swing.JScrollPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDetallesAgregados = new javax.swing.JTable();
        btnEliminarCotizacion = new javax.swing.JButton();
        btnNuevaCotizacion1 = new javax.swing.JButton();
        btnEditarCotizacion = new javax.swing.JButton();
        cbxTipoTrabajo1 = new javax.swing.JComboBox<>();
        panelSubtitulo = new javax.swing.JPanel();
        ConsultarCotizacion = new javax.swing.JLabel();
        iconoCrear = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        panelBuscarCliente = new javax.swing.JPanel();
        Buscar = new javax.swing.JLabel();
        txtBuscarCliente = new javax.swing.JTextField();
        btnCrearCliente = new javax.swing.JButton();
        cbxSeleccionarCliente = new javax.swing.JComboBox<>();
        panelBotones = new javax.swing.JPanel();
        btnVistaPrevia = new javax.swing.JButton();
        btnDescargar = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        pnlTotales = new javax.swing.JPanel();
        ckbxDescuentoSi = new javax.swing.JCheckBox();
        Descuento = new javax.swing.JLabel();
        ckbxDescuentoNo = new javax.swing.JCheckBox();
        txtDescuento = new javax.swing.JTextField();
        labelPorsentaje = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnDescartar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Crear Cotización");

        panelTitulo.setBackground(new java.awt.Color(0, 19, 90));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Administrar cotizaciones");

        iconoTitulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clipboard-48.png"))); // NOI18N
        iconoTitulo.setText("jLabel2");

        javax.swing.GroupLayout panelTituloLayout = new javax.swing.GroupLayout(panelTitulo);
        panelTitulo.setLayout(panelTituloLayout);
        panelTituloLayout.setHorizontalGroup(
            panelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTituloLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(iconoTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelTituloLayout.setVerticalGroup(
            panelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTituloLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(iconoTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlNuevaCotizacion.setBackground(new java.awt.Color(255, 255, 255));

        tituloNuevaCotizacion.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        tituloNuevaCotizacion.setForeground(new java.awt.Color(15, 105, 196));
        tituloNuevaCotizacion.setText("Nueva Cotización");

        tblDetallesAgregados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Tipo de trabajo", "Cantidad", "Descripción", "Medidas", "Subtotal"
            }
        ));
        jScrollPane3.setViewportView(tblDetallesAgregados);

        btnEliminarCotizacion.setText("Eliminar");
        btnEliminarCotizacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCotizacionActionPerformed(evt);
            }
        });

        btnNuevaCotizacion1.setText("Nueva");
        btnNuevaCotizacion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaCotizacion1ActionPerformed(evt);
            }
        });

        btnEditarCotizacion.setText("Editar");
        btnEditarCotizacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarCotizacionActionPerformed(evt);
            }
        });

        cbxTipoTrabajo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout pnlNuevaCotizacionLayout = new javax.swing.GroupLayout(pnlNuevaCotizacion);
        pnlNuevaCotizacion.setLayout(pnlNuevaCotizacionLayout);
        pnlNuevaCotizacionLayout.setHorizontalGroup(
            pnlNuevaCotizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNuevaCotizacionLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(pnlNuevaCotizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlNuevaCotizacionLayout.createSequentialGroup()
                        .addComponent(cbxTipoTrabajo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(scrollDetallesDinamicos)
                    .addGroup(pnlNuevaCotizacionLayout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addContainerGap())
                    .addGroup(pnlNuevaCotizacionLayout.createSequentialGroup()
                        .addComponent(tituloNuevaCotizacion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNuevaCotizacion1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditarCotizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarCotizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))))
        );
        pnlNuevaCotizacionLayout.setVerticalGroup(
            pnlNuevaCotizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNuevaCotizacionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlNuevaCotizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminarCotizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNuevaCotizacion1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditarCotizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tituloNuevaCotizacion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(cbxTipoTrabajo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollDetallesDinamicos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        panelSubtitulo.setBackground(new java.awt.Color(0, 81, 168));

        ConsultarCotizacion.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        ConsultarCotizacion.setForeground(new java.awt.Color(255, 255, 255));
        ConsultarCotizacion.setText("Crear cotización");

        iconoCrear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add-24.png"))); // NOI18N

        jButton1.setText("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSubtituloLayout = new javax.swing.GroupLayout(panelSubtitulo);
        panelSubtitulo.setLayout(panelSubtituloLayout);
        panelSubtituloLayout.setHorizontalGroup(
            panelSubtituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSubtituloLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(iconoCrear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ConsultarCotizacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        panelSubtituloLayout.setVerticalGroup(
            panelSubtituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSubtituloLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSubtituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(iconoCrear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelSubtituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ConsultarCotizacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        panelBuscarCliente.setBackground(new java.awt.Color(255, 255, 255));

        Buscar.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        Buscar.setForeground(new java.awt.Color(15, 105, 196));
        Buscar.setText("Cliente");

        txtBuscarCliente.setToolTipText("");

        btnCrearCliente.setBackground(new java.awt.Color(0, 81, 168));
        btnCrearCliente.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnCrearCliente.setForeground(new java.awt.Color(255, 255, 255));
        btnCrearCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add-20.png"))); // NOI18N
        btnCrearCliente.setText("Cliente nuevo");
        btnCrearCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnCrearCliente.setBorderPainted(false);
        btnCrearCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnCrearCliente.setDefaultCapable(false);
        btnCrearCliente.setFocusPainted(false);
        btnCrearCliente.setRequestFocusEnabled(false);
        btnCrearCliente.setRolloverEnabled(false);

        cbxSeleccionarCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout panelBuscarClienteLayout = new javax.swing.GroupLayout(panelBuscarCliente);
        panelBuscarCliente.setLayout(panelBuscarClienteLayout);
        panelBuscarClienteLayout.setHorizontalGroup(
            panelBuscarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBuscarClienteLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(panelBuscarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBuscarClienteLayout.createSequentialGroup()
                        .addComponent(cbxSeleccionarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCrearCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Buscar)
                    .addComponent(txtBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 895, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        panelBuscarClienteLayout.setVerticalGroup(
            panelBuscarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBuscarClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Buscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBuscarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbxSeleccionarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(btnCrearCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelBotones.setBackground(new java.awt.Color(255, 255, 255));

        btnVistaPrevia.setBackground(new java.awt.Color(254, 188, 47));
        btnVistaPrevia.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnVistaPrevia.setForeground(new java.awt.Color(255, 255, 255));
        btnVistaPrevia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vistaprevia-20.png"))); // NOI18N
        btnVistaPrevia.setText("Vista Previa");
        btnVistaPrevia.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnVistaPrevia.setBorderPainted(false);
        btnVistaPrevia.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnVistaPrevia.setDefaultCapable(false);
        btnVistaPrevia.setFocusPainted(false);
        btnVistaPrevia.setRequestFocusEnabled(false);
        btnVistaPrevia.setRolloverEnabled(false);

        btnDescargar.setBackground(new java.awt.Color(0, 81, 168));
        btnDescargar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnDescargar.setForeground(new java.awt.Color(255, 255, 255));
        btnDescargar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/download-updates-20.png"))); // NOI18N
        btnDescargar.setText("Descargar");
        btnDescargar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnDescargar.setBorderPainted(false);
        btnDescargar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnDescargar.setDefaultCapable(false);
        btnDescargar.setFocusPainted(false);
        btnDescargar.setRequestFocusEnabled(false);
        btnDescargar.setRolloverEnabled(false);

        btnImprimir.setBackground(new java.awt.Color(0, 81, 168));
        btnImprimir.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnImprimir.setForeground(new java.awt.Color(255, 255, 255));
        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/print-20.png"))); // NOI18N
        btnImprimir.setText("Imprimir");
        btnImprimir.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnImprimir.setBorderPainted(false);
        btnImprimir.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnImprimir.setDefaultCapable(false);
        btnImprimir.setFocusPainted(false);
        btnImprimir.setRequestFocusEnabled(false);
        btnImprimir.setRolloverEnabled(false);

        javax.swing.GroupLayout panelBotonesLayout = new javax.swing.GroupLayout(panelBotones);
        panelBotones.setLayout(panelBotonesLayout);
        panelBotonesLayout.setHorizontalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBotonesLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(btnVistaPrevia, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnDescargar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelBotonesLayout.setVerticalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBotonesLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVistaPrevia, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDescargar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pnlTotales.setBackground(new java.awt.Color(255, 255, 255));

        ckbxDescuentoSi.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ckbxDescuentoSi.setSelected(true);
        ckbxDescuentoSi.setText("Si");

        Descuento.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        Descuento.setForeground(new java.awt.Color(15, 105, 196));
        Descuento.setText("Descuento");

        ckbxDescuentoNo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ckbxDescuentoNo.setText("No");

        labelPorsentaje.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        labelPorsentaje.setForeground(new java.awt.Color(0, 38, 115));
        labelPorsentaje.setText("%");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 204, 255)));
        jPanel2.setForeground(new java.awt.Color(153, 204, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Subtotal");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Mano de Obra");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("TOTAL");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("IVA");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Descuento");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("$0.00");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("$0.00");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("-$0.00");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("$0.00");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("$0.00");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(58, 58, 58)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel9))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel10)))
        );

        btnGuardar.setBackground(new java.awt.Color(4, 210, 65));
        btnGuardar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/save-20.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnGuardar.setBorderPainted(false);
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnGuardar.setDefaultCapable(false);
        btnGuardar.setFocusPainted(false);
        btnGuardar.setRequestFocusEnabled(false);
        btnGuardar.setRolloverEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnDescartar.setBackground(new java.awt.Color(255, 0, 51));
        btnDescartar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnDescartar.setForeground(new java.awt.Color(255, 255, 255));
        btnDescartar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cancelar-20.png"))); // NOI18N
        btnDescartar.setText("Descartar");
        btnDescartar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnDescartar.setBorderPainted(false);
        btnDescartar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnDescartar.setDefaultCapable(false);
        btnDescartar.setFocusPainted(false);
        btnDescartar.setRequestFocusEnabled(false);
        btnDescartar.setRolloverEnabled(false);
        btnDescartar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescartarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTotalesLayout = new javax.swing.GroupLayout(pnlTotales);
        pnlTotales.setLayout(pnlTotalesLayout);
        pnlTotalesLayout.setHorizontalGroup(
            pnlTotalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTotalesLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(pnlTotalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTotalesLayout.createSequentialGroup()
                        .addComponent(Descuento)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlTotalesLayout.createSequentialGroup()
                        .addGroup(pnlTotalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlTotalesLayout.createSequentialGroup()
                                .addComponent(ckbxDescuentoSi)
                                .addGap(18, 18, 18)
                                .addComponent(ckbxDescuentoNo)
                                .addGap(18, 18, 18)
                                .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelPorsentaje))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(btnDescartar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81))))
        );
        pnlTotalesLayout.setVerticalGroup(
            pnlTotalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTotalesLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(pnlTotalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDescartar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTotalesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Descuento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlTotalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbxDescuentoSi)
                    .addComponent(ckbxDescuentoNo)
                    .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPorsentaje))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelSubtitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelBuscarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlNuevaCotizacion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTotales, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelBotones, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelSubtitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlNuevaCotizacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTotales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        InicioAdministrarCotizaciones ini = new InicioAdministrarCotizaciones();

        ini.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        if (cbxSeleccionarCliente.getSelectedIndex() == -1 || cbxSeleccionarCliente.getSelectedItem().toString().equals("No hay clientes")) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un cliente.", "Error de validación", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (vendedorPorDefecto == null) {
            JOptionPane.showMessageDialog(this, "No se puede guardar porque no se cargó un vendedor por defecto.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Obtiene el cliente seleccionado del JComboBox
        Cliente clienteSeleccionado = clientes.get(cbxSeleccionarCliente.getSelectedIndex());

        try {
            ArrayList<VentanaDetalle> detallesVentana = new ArrayList<>();
            ArrayList<PuertaAbatibleDetalle> detallesPuerta = new ArrayList<>();
            ArrayList<CanceleriaFijaDetalle> detallesCanceleria = new ArrayList<>();
            BigDecimal subtotal = BigDecimal.ZERO;

            for (Component comp : panelDetallesDinamicos.getComponents()) {
                if (comp instanceof PanelExpandible) {
                    JPanel detallePanel = ((PanelExpandible) comp).getContenido(); // Asumiendo que tienes el getter

                    if (detallePanel instanceof PanelDetalleVentana) {
                        VentanaDetalle detalle = ((PanelDetalleVentana) detallePanel).getDetalle();
                        detallesVentana.add(detalle);
                        subtotal = subtotal.add(detalle.getSubtotalLinea());
                    } else if (detallePanel instanceof PanelDetallePuertaAbatible) {
                        PuertaAbatibleDetalle detalle = ((PanelDetallePuertaAbatible) detallePanel).getDetalle();
                        detallesPuerta.add(detalle);
                        subtotal = subtotal.add(detalle.getSubtotalLinea());
                    } else if (detallePanel instanceof PanelDetalleCanceleria) {
                        CanceleriaFijaDetalle detalle = ((PanelDetalleCanceleria) detallePanel).getDetalle();
                        detallesCanceleria.add(detalle);
                        subtotal = subtotal.add(detalle.getSubtotalLinea());
                    }
                }
            }

            if (subtotal.compareTo(BigDecimal.ZERO) == 0) {
                JOptionPane.showMessageDialog(this, "Debe agregar al menos un producto a la cotización.", "Error de validación", JOptionPane.ERROR_MESSAGE);
                return;
            }

            BigDecimal descuentoMonto = BigDecimal.ZERO;
            if (ckbxDescuentoSi.isSelected() && !txtDescuento.getText().trim().isEmpty()) {
                BigDecimal descuentoPorcentaje = new BigDecimal(txtDescuento.getText().trim());
                descuentoMonto = subtotal.multiply(descuentoPorcentaje.divide(new BigDecimal("100")));
            }

            Cotizacion cotizacion = new Cotizacion();
            cotizacion.setCliente(clienteSeleccionado);
            cotizacion.setVendedor(vendedorPorDefecto); // ¡Aquí se usa el vendedor por defecto!
            cotizacion.setProyecto(null);
            cotizacion.setFecha(new Date());
            cotizacion.setEstado("Pendiente");
            cotizacion.setSubtotal(subtotal);
            cotizacion.setDescuentoMonto(descuentoMonto);

            CotizacionBO bo = new CotizacionBO();
            boolean exito = bo.crearCotizacionCompleta(cotizacion, detallesVentana, detallesCanceleria, detallesPuerta);

            if (exito) {
                JOptionPane.showMessageDialog(this, "Cotización guardada con éxito. Folio: " + cotizacion.getIdCotizacion(), "Éxito", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
                new InicioAdministrarCotizaciones().setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Ocurrió un error al guardar la cotización.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error de formato numérico. Verifique todos los campos.", "Error de Datos", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error inesperado: " + e.getMessage(), "Error General", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnDescartarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescartarActionPerformed
        int opcion = JOptionPane.showConfirmDialog(
            this,
            "¿Está seguro de descartar la cotización?",
            "Confirmar Cancelación",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE
        );

        if (opcion == JOptionPane.YES_OPTION) {
            // Abrir pantalla de inicio
            InicioAdministrarCotizaciones inicio = new InicioAdministrarCotizaciones();
            inicio.setVisible(true);
            // Cerrar la ventana de cotización actual
            this.dispose();
        }
    }//GEN-LAST:event_btnDescartarActionPerformed

    private void btnEliminarCotizacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCotizacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEliminarCotizacionActionPerformed

    private void btnNuevaCotizacion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaCotizacion1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNuevaCotizacion1ActionPerformed

    private void btnEditarCotizacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarCotizacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditarCotizacionActionPerformed

    public class PanelDetallePuertaAbatible extends JPanel {

        private int idTipoTrabajo;

        private JTextField txtMedidaH = new JTextField(8);
        private JTextField txtMedidaV = new JTextField(8);
        private JCheckBox ckMosquitero = new JCheckBox();
        private JTextField txtCantidad = new JTextField(8);
        private JTextField txtTipoCristal = new JTextField(12);
        private JTextField txtNoHojas = new JTextField(8);
        private JTextField txtPrecioUnidad = new JTextField(8);
        private JTextField txtSubtotal = new JTextField(8);
        private JTextField txtDescripcion = new JTextField(20);
        private JComboBox<TipoPuerta> cbxTipoPuerta = new JComboBox<>(TipoPuerta.values());
        private JCheckBox ckDuela = new JCheckBox();
        private JTextField txtTipoDuela = new JTextField(10);
        private JTextField txtMedDuela = new JTextField(8);
        private JCheckBox ckAdaptador = new JCheckBox();
        private JTextField txtTipoAdaptador = new JTextField(10);
        private JCheckBox ckJunquillo = new JCheckBox();
        private JTextField txtTipoJunquillo = new JTextField(10);
        private JCheckBox ckCanal = new JCheckBox();
        private JTextField txtTipoCanal = new JTextField(10);
        private JCheckBox ckPivote = new JCheckBox();
        private JTextField txtTipoPivote = new JTextField(10);
        private JTextField txtCantidadPivote = new JTextField(5);
        private JCheckBox ckJaladera = new JCheckBox();
        private JTextField txtTipoJaladera = new JTextField(10);
        private JTextField txtCantidadJaladera = new JTextField(5);
        private JCheckBox ckBarra = new JCheckBox();
        private JTextField txtTipoBarra = new JTextField(10);
        private JButton btnQuitar = new JButton("Quitar");
        private JPanel panelMateriales;
        private DefaultListModel<String> modeloMateriales = new DefaultListModel<>();
        private Map<Integer, BigDecimal> materialesSeleccionados = new HashMap<>();

        public PanelDetallePuertaAbatible(int idTrabajo, List<Material> materialesDisponibles, Runnable onRemove) {
            this.idTipoTrabajo = idTrabajo;
            setLayout(new BorderLayout());

            JPanel panelCampos = new JPanel(new GridLayout(0, 2, 5, 5));
            panelCampos.add(new JLabel("Medida Horizontal:"));
            panelCampos.add(txtMedidaH);
            panelCampos.add(new JLabel("Medida Vertical:"));
            panelCampos.add(txtMedidaV);
            panelCampos.add(new JLabel("Mosquitero:"));
            panelCampos.add(ckMosquitero);
            panelCampos.add(new JLabel("Cantidad:"));
            panelCampos.add(txtCantidad);
            panelCampos.add(new JLabel("Tipo Cristal:"));
            panelCampos.add(txtTipoCristal);
            panelCampos.add(new JLabel("No. hojas:"));
            panelCampos.add(txtNoHojas);
            panelCampos.add(new JLabel("Precio unidad:"));
            panelCampos.add(txtPrecioUnidad);
            panelCampos.add(new JLabel("Subtotal línea:"));
            panelCampos.add(txtSubtotal);
            panelCampos.add(new JLabel("Descripción:"));
            panelCampos.add(txtDescripcion);
            panelCampos.add(new JLabel("Tipo Puerta:"));
            panelCampos.add(cbxTipoPuerta);
            panelCampos.add(new JLabel("Duela:"));
            panelCampos.add(ckDuela);
            panelCampos.add(new JLabel("Tipo duela:"));
            panelCampos.add(txtTipoDuela);
            panelCampos.add(new JLabel("Medida duela:"));
            panelCampos.add(txtMedDuela);
            panelCampos.add(new JLabel("Adaptador:"));
            panelCampos.add(ckAdaptador);
            panelCampos.add(new JLabel("Tipo adaptador:"));
            panelCampos.add(txtTipoAdaptador);
            panelCampos.add(new JLabel("Junquillo:"));
            panelCampos.add(ckJunquillo);
            panelCampos.add(new JLabel("Tipo junquillo:"));
            panelCampos.add(txtTipoJunquillo);
            panelCampos.add(new JLabel("Canal:"));
            panelCampos.add(ckCanal);
            panelCampos.add(new JLabel("Tipo canal:"));
            panelCampos.add(txtTipoCanal);
            panelCampos.add(new JLabel("Pivote:"));
            panelCampos.add(ckPivote);
            panelCampos.add(new JLabel("Tipo pivote:"));
            panelCampos.add(txtTipoPivote);
            panelCampos.add(new JLabel("Cantidad pivote:"));
            panelCampos.add(txtCantidadPivote);
            panelCampos.add(new JLabel("Jaladera:"));
            panelCampos.add(ckJaladera);
            panelCampos.add(new JLabel("Tipo jaladera:"));
            panelCampos.add(txtTipoJaladera);
            panelCampos.add(new JLabel("Cantidad jaladera:"));
            panelCampos.add(txtCantidadJaladera);
            panelCampos.add(new JLabel("Barra:"));
            panelCampos.add(ckBarra);
            panelCampos.add(new JLabel("Tipo barra:"));
            panelCampos.add(txtTipoBarra);

            JScrollPane scrollCampos = new JScrollPane(panelCampos);
            scrollCampos.setPreferredSize(new Dimension(450, 150));
            add(scrollCampos, BorderLayout.NORTH);

            panelMateriales = new JPanel(new FlowLayout(FlowLayout.LEFT));
            panelMateriales.setBorder(BorderFactory.createTitledBorder("Materiales"));
            JComboBox<Material> cmbMaterial = new JComboBox<>(materialesDisponibles.toArray(new Material[0]));
            JTextField txtCantidadMaterial = new JTextField(5);
            JButton btnAgregar = new JButton("Agregar");
            JList<String> listaMateriales = new JList<>(modeloMateriales);
            btnAgregar.addActionListener(e -> {
                Material m = (Material) cmbMaterial.getSelectedItem();
                BigDecimal cantidad = new BigDecimal(txtCantidadMaterial.getText());
                modeloMateriales.addElement(m.getDescripcion() + " - " + cantidad);
                materialesSeleccionados.put(m.getIdMaterial(), cantidad);
                txtCantidadMaterial.setText("");
            });
            panelMateriales.add(new JLabel("Material:"));
            panelMateriales.add(cmbMaterial);
            panelMateriales.add(new JLabel("Cantidad:"));
            panelMateriales.add(txtCantidadMaterial);
            panelMateriales.add(btnAgregar);
            panelMateriales.add(new JScrollPane(listaMateriales));
            add(panelMateriales, BorderLayout.CENTER);

            btnQuitar.addActionListener(e -> {
                Container parent = getParent();
                if (parent != null) {
                    parent.remove(this);
                    parent.revalidate();
                    parent.repaint();
                    onRemove.run();
                }
            });
            add(btnQuitar, BorderLayout.SOUTH);
        }

        // === SE MODIFICA EL MÉTODO getDetalle() ===
        public PuertaAbatibleDetalle getDetalle() {
            PuertaAbatibleDetalle detalle = new PuertaAbatibleDetalle();
            detalle.setMedidaHorizontal(new BigDecimal(txtMedidaH.getText()));
            detalle.setMedidaVertical(new BigDecimal(txtMedidaV.getText()));
            detalle.setMosquitero(ckMosquitero.isSelected());
            detalle.setCantidad(Integer.parseInt(txtCantidad.getText()));
            detalle.setTipoCristal(txtTipoCristal.getText());
            detalle.setNoHojas(Integer.parseInt(txtNoHojas.getText()));
            detalle.setPrecioSoloUnaUnidadCalculado(new BigDecimal(txtPrecioUnidad.getText()));
            detalle.setSubtotalLinea(new BigDecimal(txtSubtotal.getText()));
            detalle.setDescripcion(txtDescripcion.getText());
            TipoPuerta tipoPuerta = (TipoPuerta) cbxTipoPuerta.getSelectedItem();
            detalle.setTipoPuerta(tipoPuerta);
            detalle.setDuela(ckDuela.isSelected());
            detalle.setTipoDuela(txtTipoDuela.getText());
            detalle.setMedidaDuela(new BigDecimal(txtMedDuela.getText()));
            detalle.setAdaptador(ckAdaptador.isSelected());
            detalle.setTipoAdaptador(txtTipoAdaptador.getText());
            detalle.setJunquillo(ckJunquillo.isSelected());
            detalle.setTipoJunquillo(txtTipoJunquillo.getText());
            detalle.setCanal(ckCanal.isSelected());
            detalle.setTipoCanal(txtTipoCanal.getText());
            detalle.setPivote(ckPivote.isSelected());
            detalle.setTipoPivote(txtTipoPivote.getText());
            detalle.setCantidadPivote(Integer.parseInt(txtCantidadPivote.getText()));
            detalle.setJaladera(ckJaladera.isSelected());
            detalle.setTipoJaladera(txtTipoJaladera.getText());
            detalle.setCantidadJaladera(Integer.parseInt(txtCantidadJaladera.getText()));
            detalle.setBarra(ckBarra.isSelected());
            detalle.setTipoBarra(txtTipoBarra.getText());

            CatalogoTrabajo c = new CatalogoTrabajo();
            c.setIdCatalogo(this.idTipoTrabajo);
            detalle.setTipoTrabajo(c);

            return detalle;
        }

        public Map<Integer, BigDecimal> getMaterialesSeleccionados() {
            return materialesSeleccionados;
        }
    }

    public class PanelDetalleVentana extends JPanel {

        private int idTipoTrabajo;

        private JTextField txtMedidaH = new JTextField(8);
        private JTextField txtMedidaV = new JTextField(8);
        private JTextField txtCantidad = new JTextField(5);
        private JTextField txtTipoCristal = new JTextField(12);
        private JTextField txtNoHojas = new JTextField(5);
        private JTextField txtPrecioUnidad = new JTextField(8);
        private JTextField txtSubtotal = new JTextField(8);
        private JTextField txtDescripcion = new JTextField(15);
        private JComboBox<TipoVentana> cmbTipoVentana = new JComboBox<>(TipoVentana.values());
        private JCheckBox ckMosquitero = new JCheckBox();
        private JCheckBox ckArco = new JCheckBox();
        private JTextField txtTipoArco = new JTextField(10);
        private JTextField txtMedidaArco = new JTextField(8);
        private JTextField txtTipoCanalillo = new JTextField(12);
        private JTextField txtMedidaCanalillo = new JTextField(8);

        public PanelDetalleVentana(int idTrabajo, List<Material> materialesDisponibles, Runnable onRemove) {
            this.idTipoTrabajo = idTrabajo; // Se guarda el ID del trabajo
            setLayout(new BorderLayout());

            JPanel panelCampos = new JPanel(new GridLayout(0, 2, 6, 4));
            panelCampos.add(new JLabel("Medida horizontal:"));
            panelCampos.add(txtMedidaH);
            panelCampos.add(new JLabel("Medida vertical:"));
            panelCampos.add(txtMedidaV);
            panelCampos.add(new JLabel("Cantidad:"));
            panelCampos.add(txtCantidad);
            panelCampos.add(new JLabel("Tipo cristal:"));
            panelCampos.add(txtTipoCristal);
            panelCampos.add(new JLabel("No. hojas:"));
            panelCampos.add(txtNoHojas);
            panelCampos.add(new JLabel("Precio unidad:"));
            panelCampos.add(txtPrecioUnidad);
            panelCampos.add(new JLabel("Subtotal línea:"));
            panelCampos.add(txtSubtotal);
            panelCampos.add(new JLabel("Descripción:"));
            panelCampos.add(txtDescripcion);
            panelCampos.add(new JLabel("Tipo ventana:"));
            panelCampos.add(cmbTipoVentana);
            panelCampos.add(new JLabel("Mosquitero:"));
            panelCampos.add(ckMosquitero);
            panelCampos.add(new JLabel("Arco:"));
            panelCampos.add(ckArco);
            panelCampos.add(new JLabel("Tipo arco:"));
            panelCampos.add(txtTipoArco);
            panelCampos.add(new JLabel("Medida arco:"));
            panelCampos.add(txtMedidaArco);
            panelCampos.add(new JLabel("Tipo canalillo:"));
            panelCampos.add(txtTipoCanalillo);
            panelCampos.add(new JLabel("Medida canalillo:"));
            panelCampos.add(txtMedidaCanalillo);

            JScrollPane scrollCampos = new JScrollPane(panelCampos);
            scrollCampos.setPreferredSize(new Dimension(500, 200));
            add(scrollCampos, BorderLayout.CENTER);

            JButton btnQuitar = new JButton("Quitar");
            btnQuitar.addActionListener(e -> {
                Container parent = getParent();
                if (parent != null) {
                    parent.remove(this);
                    parent.revalidate();
                    parent.repaint();
                    onRemove.run();
                }
            });
            add(btnQuitar, BorderLayout.SOUTH);
        }

        public VentanaDetalle getDetalle() {
            VentanaDetalle d = new VentanaDetalle();
            d.setMedidaHorizontal(new BigDecimal(txtMedidaH.getText()));
            d.setMedidaVertical(new BigDecimal(txtMedidaV.getText()));
            d.setCantidad(Integer.parseInt(txtCantidad.getText()));
            d.setTipoCristal(txtTipoCristal.getText());
            d.setNoHojas(Integer.parseInt(txtNoHojas.getText()));
            d.setPrecioSoloUnaUnidadCalculado(new BigDecimal(txtPrecioUnidad.getText()));
            d.setSubtotalLinea(new BigDecimal(txtSubtotal.getText()));
            d.setDescripcion(txtDescripcion.getText());
            d.setTipoVentana((TipoVentana) cmbTipoVentana.getSelectedItem());
            d.setMosquitero(ckMosquitero.isSelected());
            d.setArco(ckArco.isSelected());
            d.setTipoArco(txtTipoArco.getText());
            d.setMedidaArco(new BigDecimal(txtMedidaArco.getText()));
            d.setTipoCanalillo(txtTipoCanalillo.getText());
            d.setMedidaCanalillo(new BigDecimal(txtMedidaCanalillo.getText()));

            // Se crea un objeto CatalogoTrabajo solo con el ID para la relación
            CatalogoTrabajo c = new CatalogoTrabajo();
            c.setIdCatalogo(this.idTipoTrabajo);
            d.setTipoTrabajo(c); // Asume que VentanaDetalle tiene un setTipoTrabajo()

            return d;
        }
    }

    public class PanelDetalleCanceleria extends JPanel {

        private int idTipoTrabajo;

        private JTextField txtMedidaH = new JTextField(8);
        private JTextField txtMedidaV = new JTextField(8);
        private JTextField txtCantidad = new JTextField(5);
        private JTextField txtTipoCristal = new JTextField(12);
        private JTextField txtNoHojas = new JTextField(5);
        private JTextField txtPrecioUnidad = new JTextField(8);
        private JTextField txtSubtotal = new JTextField(8);
        private JTextField txtDescripcion = new JTextField(15);
        private JComboBox<TipoCanceleria> cmbTipoCanceleria = new JComboBox<>(TipoCanceleria.values());
        private JCheckBox ckBolsa = new JCheckBox();
        private JTextField txtNumFijosVerticales = new JTextField(5);
        private JTextField txtNumFijosHorizontales = new JTextField(5);
        private JTextField txtTipoTapa = new JTextField(10);
        private JTextField txtCantidadTapa = new JTextField(5);
        private JCheckBox ckZoclo = new JCheckBox();
        private JTextField txtTipoZoclo = new JTextField(10);
        private JCheckBox ckJunquillo = new JCheckBox();
        private JTextField txtTipoJunquillo = new JTextField(10);
        private JCheckBox ckArco = new JCheckBox();
        private JTextField txtTipoArco = new JTextField(10);
        private JTextField txtMedidaArco = new JTextField(8);
        private JCheckBox ckCanalillo = new JCheckBox();
        private JTextField txtTipoCanalillo = new JTextField(10);
        private JTextField txtMedidaCanalillo = new JTextField(8);

        public PanelDetalleCanceleria(int idTrabajo, List<Material> materialesDisponibles, Runnable onRemove) {
            this.idTipoTrabajo = idTrabajo;
            setLayout(new BorderLayout());

            JPanel panelCampos = new JPanel(new GridLayout(0, 2, 6, 4));
            panelCampos.add(new JLabel("Medida horizontal:"));
            panelCampos.add(txtMedidaH);
            panelCampos.add(new JLabel("Medida vertical:"));
            panelCampos.add(txtMedidaV);
            panelCampos.add(new JLabel("Cantidad:"));
            panelCampos.add(txtCantidad);
            panelCampos.add(new JLabel("Tipo cristal:"));
            panelCampos.add(txtTipoCristal);
            panelCampos.add(new JLabel("No. hojas:"));
            panelCampos.add(txtNoHojas);
            panelCampos.add(new JLabel("Precio unidad:"));
            panelCampos.add(txtPrecioUnidad);
            panelCampos.add(new JLabel("Subtotal línea:"));
            panelCampos.add(txtSubtotal);
            panelCampos.add(new JLabel("Descripción:"));
            panelCampos.add(txtDescripcion);
            panelCampos.add(new JLabel("Tipo cancelería:"));
            panelCampos.add(cmbTipoCanceleria);
            panelCampos.add(new JLabel("Bolsa:"));
            panelCampos.add(ckBolsa);
            panelCampos.add(new JLabel("Fijos verticales:"));
            panelCampos.add(txtNumFijosVerticales);
            panelCampos.add(new JLabel("Fijos horizontales:"));
            panelCampos.add(txtNumFijosHorizontales);
            panelCampos.add(new JLabel("Tipo tapa:"));
            panelCampos.add(txtTipoTapa);
            panelCampos.add(new JLabel("Cantidad tapa:"));
            panelCampos.add(txtCantidadTapa);
            panelCampos.add(new JLabel("Zoclo:"));
            panelCampos.add(ckZoclo);
            panelCampos.add(new JLabel("Tipo zoclo:"));
            panelCampos.add(txtTipoZoclo);
            panelCampos.add(new JLabel("Junquillo:"));
            panelCampos.add(ckJunquillo);
            panelCampos.add(new JLabel("Tipo junquillo:"));
            panelCampos.add(txtTipoJunquillo);
            panelCampos.add(new JLabel("Arco:"));
            panelCampos.add(ckArco);
            panelCampos.add(new JLabel("Tipo arco:"));
            panelCampos.add(txtTipoArco);
            panelCampos.add(new JLabel("Medida arco:"));
            panelCampos.add(txtMedidaArco);
            panelCampos.add(new JLabel("Canalillo:"));
            panelCampos.add(ckCanalillo);
            panelCampos.add(new JLabel("Tipo canalillo:"));
            panelCampos.add(txtTipoCanalillo);
            panelCampos.add(new JLabel("Medida canalillo:"));
            panelCampos.add(txtMedidaCanalillo);

            JScrollPane scrollCampos = new JScrollPane(panelCampos);
            scrollCampos.setPreferredSize(new Dimension(500, 250));
            add(scrollCampos, BorderLayout.CENTER);

            JButton btnQuitar = new JButton("Quitar");
            btnQuitar.addActionListener(e -> {
                Container parent = getParent();
                if (parent != null) {
                    parent.remove(this);
                    parent.revalidate();
                    parent.repaint();
                    onRemove.run();
                }
            });
            add(btnQuitar, BorderLayout.SOUTH);
        }

        // === SE MODIFICA EL MÉTODO getDetalle() ===
        public CanceleriaFijaDetalle getDetalle() {
            CanceleriaFijaDetalle d = new CanceleriaFijaDetalle();
            d.setMedidaHorizontal(new BigDecimal(txtMedidaH.getText()));
            d.setMedidaVertical(new BigDecimal(txtMedidaV.getText()));
            d.setCantidad(Integer.parseInt(txtCantidad.getText()));
            d.setTipoCristal(txtTipoCristal.getText());
            d.setNoHojas(Integer.parseInt(txtNoHojas.getText()));
            d.setPrecioSoloUnaUnidadCalculado(new BigDecimal(txtPrecioUnidad.getText()));
            d.setSubtotalLinea(new BigDecimal(txtSubtotal.getText()));
            d.setDescripcion(txtDescripcion.getText());
            d.setTipoCanceleria((TipoCanceleria) cmbTipoCanceleria.getSelectedItem());
            d.setBolsa(ckBolsa.isSelected());
            d.setNumFijosVerticales(Integer.parseInt(txtNumFijosVerticales.getText()));
            d.setNumFijosHorizontales(Integer.parseInt(txtNumFijosHorizontales.getText()));
            d.setTipoTapa(txtTipoTapa.getText());
            d.setCantidadTapa(Integer.parseInt(txtCantidadTapa.getText()));
            d.setZoclo(ckZoclo.isSelected());
            d.setTipoZoclo(txtTipoZoclo.getText());
            d.setJunquillo(ckJunquillo.isSelected());
            d.setTipoJunquillo(txtTipoJunquillo.getText());
            d.setArco(ckArco.isSelected());
            d.setTipoArco(txtTipoArco.getText());
            d.setMedidaArco(new BigDecimal(txtMedidaArco.getText()));
            d.setCanalillo(ckCanalillo.isSelected());
            d.setTipoCanalillo(txtTipoCanalillo.getText());
            d.setMedidaCanalillo(new BigDecimal(txtMedidaCanalillo.getText()));

            // Se crea un objeto CatalogoTrabajo solo con el ID para la relación
            CatalogoTrabajo c = new CatalogoTrabajo();
            c.setIdCatalogo(this.idTipoTrabajo);
            d.setTipoTrabajo(c); // Asume que CanceleriaFijaDetalle tiene un setTipoTrabajo()

            return d;
        }
    }

    private void cargarMaterialesDisponibles() {
        materialesDisponibles = new ArrayList<>();
        materialesDisponibles.add(new Material(1, "Vidrio", new BigDecimal("150.5"), 50, Material.TipoMaterial.Vidrio));
        materialesDisponibles.add(new Material(2, "Aluminio", new BigDecimal("300.0"), 30, Material.TipoMaterial.Aluminio));
        materialesDisponibles.add(new Material(3, "Accesorio", new BigDecimal("80.0"), 100, Material.TipoMaterial.Accesorio));
    }

    public class PanelExpandible extends JPanel {

        private final JPanel contenido;
        private final JButton btnToggle;
        private boolean estaVisible = true;

        public PanelExpandible(String titulo, JPanel contenido) {
            this.contenido = contenido;
            setLayout(new BorderLayout());

            btnToggle = new JButton("▼ " + titulo);
            btnToggle.setFocusPainted(false);
            btnToggle.setBorderPainted(false);
            btnToggle.setContentAreaFilled(false);
            btnToggle.setHorizontalAlignment(SwingConstants.LEFT);
            btnToggle.addActionListener(e -> toggleContenido());

            add(btnToggle, BorderLayout.NORTH);
            add(contenido, BorderLayout.CENTER);
        }

        private void toggleContenido() {
            estaVisible = !estaVisible;
            contenido.setVisible(estaVisible);
            btnToggle.setText((estaVisible ? "▼ " : "► ") + btnToggle.getText().substring(2));
            revalidate();
            repaint();
        }

        public JPanel getContenido() {
            return contenido;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmCrearCotizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmCrearCotizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmCrearCotizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmCrearCotizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmCrearCotizacion().setVisible(true);
            }
        });
    }

    /*private void cargarClientes() {
        try (Connection conexion = Conexion.getConnection()) {
            ClienteDAO clienteDAO = new ClienteDAO(conexion);
            clientes = clienteDAO.obtenerTodos();

            cbxSeleccionarCliente.removeAllItems();
            for (Cliente c : clientes) {
                cbxSeleccionarCliente.addItem(c.getNombre());
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar clientes: " + ex.getMessage());
        }
    }*/
    private void cargarClientes() {
        try (Connection conexion = Conexion.getConnection()) {
            ClienteDAO clienteDAO = new ClienteDAO(conexion);
            clientes = clienteDAO.obtenerTodos();

            if (clientes != null && !clientes.isEmpty()) {
                cbxSeleccionarCliente.setModel(new DefaultComboBoxModel<>(
                        clientes.stream().map(Cliente::getNombre).toArray(String[]::new)
                ));
            } else {
                cbxSeleccionarCliente.setModel(new DefaultComboBoxModel<>(new String[]{"No hay clientes"}));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar clientes: " + ex.getMessage());
        }
    }

    private void filtrarClientes(String texto) {
        cbxSeleccionarCliente.removeAllItems();
        for (Cliente c : clientes) {
            if (c.getNombre().toLowerCase().contains(texto.toLowerCase())) {
                cbxSeleccionarCliente.addItem(c.getNombre());
            }
        }
    }

    private void cargarTiposTrabajo() {
        cbxTipoTrabajo1.removeAllItems();
        cbxTipoTrabajo1.addItem("Selecciona un tipo de trabajo...");
        for (CatalogoTrabajo trabajo : catalogoTrabajos) {
            cbxTipoTrabajo1.addItem(trabajo.getNombre());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Buscar;
    private javax.swing.JLabel ConsultarCotizacion;
    private javax.swing.JLabel Descuento;
    private javax.swing.JButton btnCrearCliente;
    private javax.swing.JButton btnDescargar;
    private javax.swing.JButton btnDescartar;
    private javax.swing.JButton btnEditarCotizacion;
    private javax.swing.JButton btnEliminarCotizacion;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnNuevaCotizacion1;
    private javax.swing.JButton btnVistaPrevia;
    private javax.swing.JComboBox<String> cbxSeleccionarCliente;
    private javax.swing.JComboBox<String> cbxTipoTrabajo1;
    private javax.swing.JCheckBox ckbxDescuentoNo;
    private javax.swing.JCheckBox ckbxDescuentoSi;
    private javax.swing.JLabel iconoCrear;
    private javax.swing.JLabel iconoTitulo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelPorsentaje;
    private javax.swing.JPanel panelBotones;
    private javax.swing.JPanel panelBuscarCliente;
    private javax.swing.JPanel panelSubtitulo;
    private javax.swing.JPanel panelTitulo;
    private javax.swing.JPanel pnlNuevaCotizacion;
    private javax.swing.JPanel pnlTotales;
    private javax.swing.JScrollPane scrollDetallesDinamicos;
    private javax.swing.JTable tblDetallesAgregados;
    private javax.swing.JLabel tituloNuevaCotizacion;
    private javax.swing.JTextField txtBuscarCliente;
    private javax.swing.JTextField txtDescuento;
    // End of variables declaration//GEN-END:variables
}
