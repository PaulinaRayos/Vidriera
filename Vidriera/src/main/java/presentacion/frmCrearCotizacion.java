/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentacion;

import dao.ClienteDAO;
import dao.CotizacionDAO;
import dao.MaterialDAO;
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import modelo.CanceleriaFijaDetalle;
import modelo.Cliente;
import modelo.Cotizacion;
import modelo.Material;
import modelo.PuertaAbatibleDetalle;
import modelo.TipoCanceleria;
import modelo.TipoPuerta;
import modelo.TipoVentana;
import modelo.VentanaDetalle;
import negocio.CotizacionBO;
import utils.Conexion;

/**
 *
 * @author User
 */
public class frmCrearCotizacion extends javax.swing.JFrame {

    /**
     * Creates new form frmCrearCotizacion
     */
    private List<Cliente> clientes;
    private JPanel panelDetallesDinamicos;
    private List<Material> materialesDisponibles;

    public frmCrearCotizacion() {
        initComponents();
         panelDetallesDinamicos = new JPanel();
        panelDetallesDinamicos.setLayout(new BoxLayout(panelDetallesDinamicos, BoxLayout.Y_AXIS));
        scrollDetallesDinamicos.setViewportView(panelDetallesDinamicos);
        scrollDetallesDinamicos.setPreferredSize(new Dimension(900, 250));
        cargarClientes();
        cargarTiposTrabajo();
         cargarMaterialesDisponibles();
        txtBuscarCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                filtrarClientes(txtBuscarCliente.getText());
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelTitulo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        iconoTitulo = new javax.swing.JLabel();
        panelTipoTrabajo = new javax.swing.JPanel();
        tituloTipoTrabajo = new javax.swing.JLabel();
        cbxTipoTrabajo1 = new javax.swing.JComboBox<>();
        scrollDetallesDinamicos = new javax.swing.JScrollPane();
        panelTituloDetalle = new javax.swing.JPanel();
        Descuento = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnDescartar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        panelDescuento = new javax.swing.JPanel();
        ckbxDescuentoSi = new javax.swing.JCheckBox();
        ckbxDescuentoNo = new javax.swing.JCheckBox();
        txtDescuento = new javax.swing.JTextField();
        labelPorsentaje = new javax.swing.JLabel();
        panelBotones = new javax.swing.JPanel();
        btnVistaPrevia = new javax.swing.JButton();
        btnDescargar = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        panelSubtitulo = new javax.swing.JPanel();
        ConsultarCotizacion = new javax.swing.JLabel();
        iconoCrear = new javax.swing.JLabel();
        panelBuscarCliente = new javax.swing.JPanel();
        Buscar = new javax.swing.JLabel();
        txtBuscarCliente = new javax.swing.JTextField();
        btnCrearCliente = new javax.swing.JButton();
        cbxSeleccionarCliente = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelTitulo.setBackground(new java.awt.Color(0, 19, 90));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Administrar cotizaciones");

        iconoTitulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clipboard-48.png"))); // NOI18N
        iconoTitulo.setText("jLabel2");

        javax.swing.GroupLayout panelTituloLayout = new javax.swing.GroupLayout(panelTitulo);
        panelTitulo.setLayout(panelTituloLayout);
        panelTituloLayout.setHorizontalGroup(
            panelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTituloLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(iconoTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelTituloLayout.setVerticalGroup(
            panelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTituloLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(iconoTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelTipoTrabajo.setBackground(new java.awt.Color(255, 255, 255));

        tituloTipoTrabajo.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        tituloTipoTrabajo.setForeground(new java.awt.Color(15, 105, 196));
        tituloTipoTrabajo.setText("Tipo de trabajo");

        cbxTipoTrabajo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxTipoTrabajo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTipoTrabajo1ActionPerformed(evt);
            }
        });

        panelTituloDetalle.setBackground(new java.awt.Color(255, 255, 255));

        Descuento.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        Descuento.setForeground(new java.awt.Color(15, 105, 196));
        Descuento.setText("Descuento");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnDescartar.setBackground(new java.awt.Color(255, 0, 51));
        btnDescartar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnDescartar.setForeground(new java.awt.Color(255, 255, 255));
        btnDescartar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cancelar-20.png"))); // NOI18N
        btnDescartar.setText("Descartar");
        btnDescartar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnDescartar.setBorderPainted(false);
        btnDescartar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnDescartar.setDefaultCapable(false);
        btnDescartar.setFocusPainted(false);
        btnDescartar.setRequestFocusEnabled(false);
        btnDescartar.setRolloverEnabled(false);
        btnDescartar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescartarActionPerformed(evt);
            }
        });

        btnGuardar.setBackground(new java.awt.Color(4, 210, 65));
        btnGuardar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/save-20.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnGuardar.setBorderPainted(false);
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnGuardar.setDefaultCapable(false);
        btnGuardar.setFocusPainted(false);
        btnGuardar.setRequestFocusEnabled(false);
        btnGuardar.setRolloverEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        panelDescuento.setBackground(new java.awt.Color(255, 255, 255));

        ckbxDescuentoSi.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ckbxDescuentoSi.setSelected(true);
        ckbxDescuentoSi.setText("Si");

        ckbxDescuentoNo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ckbxDescuentoNo.setText("No");

        labelPorsentaje.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        labelPorsentaje.setForeground(new java.awt.Color(0, 38, 115));
        labelPorsentaje.setText("%");

        javax.swing.GroupLayout panelDescuentoLayout = new javax.swing.GroupLayout(panelDescuento);
        panelDescuento.setLayout(panelDescuentoLayout);
        panelDescuentoLayout.setHorizontalGroup(
            panelDescuentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDescuentoLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(ckbxDescuentoSi)
                .addGap(18, 18, 18)
                .addComponent(ckbxDescuentoNo)
                .addGap(18, 18, 18)
                .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelPorsentaje)
                .addContainerGap(394, Short.MAX_VALUE))
        );
        panelDescuentoLayout.setVerticalGroup(
            panelDescuentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDescuentoLayout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addGroup(panelDescuentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbxDescuentoSi)
                    .addComponent(ckbxDescuentoNo)
                    .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPorsentaje))
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btnDescartar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnDescartar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        panelBotones.setBackground(new java.awt.Color(255, 255, 255));

        btnVistaPrevia.setBackground(new java.awt.Color(254, 188, 47));
        btnVistaPrevia.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnVistaPrevia.setForeground(new java.awt.Color(255, 255, 255));
        btnVistaPrevia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vistaprevia-20.png"))); // NOI18N
        btnVistaPrevia.setText("Vista Previa");
        btnVistaPrevia.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnVistaPrevia.setBorderPainted(false);
        btnVistaPrevia.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnVistaPrevia.setDefaultCapable(false);
        btnVistaPrevia.setFocusPainted(false);
        btnVistaPrevia.setRequestFocusEnabled(false);
        btnVistaPrevia.setRolloverEnabled(false);

        btnDescargar.setBackground(new java.awt.Color(0, 81, 168));
        btnDescargar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnDescargar.setForeground(new java.awt.Color(255, 255, 255));
        btnDescargar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/download-updates-20.png"))); // NOI18N
        btnDescargar.setText("Descargar");
        btnDescargar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnDescargar.setBorderPainted(false);
        btnDescargar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnDescargar.setDefaultCapable(false);
        btnDescargar.setFocusPainted(false);
        btnDescargar.setRequestFocusEnabled(false);
        btnDescargar.setRolloverEnabled(false);

        btnImprimir.setBackground(new java.awt.Color(0, 81, 168));
        btnImprimir.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnImprimir.setForeground(new java.awt.Color(255, 255, 255));
        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/print-20.png"))); // NOI18N
        btnImprimir.setText("Imprimir");
        btnImprimir.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnImprimir.setBorderPainted(false);
        btnImprimir.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnImprimir.setDefaultCapable(false);
        btnImprimir.setFocusPainted(false);
        btnImprimir.setRequestFocusEnabled(false);
        btnImprimir.setRolloverEnabled(false);

        javax.swing.GroupLayout panelBotonesLayout = new javax.swing.GroupLayout(panelBotones);
        panelBotones.setLayout(panelBotonesLayout);
        panelBotonesLayout.setHorizontalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBotonesLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(btnVistaPrevia, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnDescargar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelBotonesLayout.setVerticalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBotonesLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVistaPrevia, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDescargar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelTituloDetalleLayout = new javax.swing.GroupLayout(panelTituloDetalle);
        panelTituloDetalle.setLayout(panelTituloDetalleLayout);
        panelTituloDetalleLayout.setHorizontalGroup(
            panelTituloDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTituloDetalleLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(Descuento)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelTituloDetalleLayout.setVerticalGroup(
            panelTituloDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTituloDetalleLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Descuento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout panelTipoTrabajoLayout = new javax.swing.GroupLayout(panelTipoTrabajo);
        panelTipoTrabajo.setLayout(panelTipoTrabajoLayout);
        panelTipoTrabajoLayout.setHorizontalGroup(
            panelTipoTrabajoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTipoTrabajoLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(panelTipoTrabajoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbxTipoTrabajo1, javax.swing.GroupLayout.PREFERRED_SIZE, 895, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tituloTipoTrabajo))
                .addContainerGap(122, Short.MAX_VALUE))
            .addComponent(scrollDetallesDinamicos)
            .addComponent(panelTituloDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelTipoTrabajoLayout.setVerticalGroup(
            panelTipoTrabajoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTipoTrabajoLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(tituloTipoTrabajo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbxTipoTrabajo1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollDetallesDinamicos, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelTituloDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelSubtitulo.setBackground(new java.awt.Color(0, 81, 168));

        ConsultarCotizacion.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        ConsultarCotizacion.setForeground(new java.awt.Color(255, 255, 255));
        ConsultarCotizacion.setText("Crear cotización");

        iconoCrear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add-24.png"))); // NOI18N

        javax.swing.GroupLayout panelSubtituloLayout = new javax.swing.GroupLayout(panelSubtitulo);
        panelSubtitulo.setLayout(panelSubtituloLayout);
        panelSubtituloLayout.setHorizontalGroup(
            panelSubtituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSubtituloLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(iconoCrear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ConsultarCotizacion)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelSubtituloLayout.setVerticalGroup(
            panelSubtituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSubtituloLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSubtituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(iconoCrear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ConsultarCotizacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        panelBuscarCliente.setBackground(new java.awt.Color(255, 255, 255));

        Buscar.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        Buscar.setForeground(new java.awt.Color(15, 105, 196));
        Buscar.setText("Cliente");

        txtBuscarCliente.setToolTipText("");

        btnCrearCliente.setBackground(new java.awt.Color(0, 81, 168));
        btnCrearCliente.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnCrearCliente.setForeground(new java.awt.Color(255, 255, 255));
        btnCrearCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add-20.png"))); // NOI18N
        btnCrearCliente.setText("Cliente nuevo");
        btnCrearCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnCrearCliente.setBorderPainted(false);
        btnCrearCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnCrearCliente.setDefaultCapable(false);
        btnCrearCliente.setFocusPainted(false);
        btnCrearCliente.setRequestFocusEnabled(false);
        btnCrearCliente.setRolloverEnabled(false);

        cbxSeleccionarCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout panelBuscarClienteLayout = new javax.swing.GroupLayout(panelBuscarCliente);
        panelBuscarCliente.setLayout(panelBuscarClienteLayout);
        panelBuscarClienteLayout.setHorizontalGroup(
            panelBuscarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBuscarClienteLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(panelBuscarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBuscarClienteLayout.createSequentialGroup()
                        .addComponent(cbxSeleccionarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCrearCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Buscar)
                    .addComponent(txtBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 895, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelBuscarClienteLayout.setVerticalGroup(
            panelBuscarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBuscarClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Buscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBuscarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbxSeleccionarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(btnCrearCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelSubtitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelBuscarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelTipoTrabajo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelSubtitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelTipoTrabajo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(90, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDescartarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescartarActionPerformed
        int opcion = JOptionPane.showConfirmDialog(
                this,
                "¿Está seguro de descartar la cotización?",
                "Confirmar Cancelación",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE
        );

        if (opcion == JOptionPane.YES_OPTION) {
            // Abrir pantalla de inicio
            InicioAdministrarCotizaciones inicio = new InicioAdministrarCotizaciones();
            inicio.setVisible(true);
            // Cerrar la ventana de cotización actual
            this.dispose();
        }

    }//GEN-LAST:event_btnDescartarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
       
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void cbxTipoTrabajo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTipoTrabajo1ActionPerformed
        // TODO add your handling code here:
        String tipo = (String) cbxTipoTrabajo1.getSelectedItem();
        if (tipo == null || tipo.startsWith("Selecciona")) return;
     if (tipo.startsWith("VENTANA")) {
        PanelDetalleVentana pdv = new PanelDetalleVentana(materialesDisponibles, () -> {
            panelDetallesDinamicos.revalidate();
            panelDetallesDinamicos.repaint();
        });

        PanelExpandible panelExp = new PanelExpandible(tipo, pdv); // Usa el título completo seleccionado
        panelDetallesDinamicos.add(panelExp);
        panelDetallesDinamicos.revalidate();
        panelDetallesDinamicos.repaint();

    } else if (tipo.startsWith("PUERTA")) {
        
        PanelDetallePuertaAbatible pdp = new PanelDetallePuertaAbatible(materialesDisponibles, () -> {
            panelDetallesDinamicos.revalidate();
            panelDetallesDinamicos.repaint();
        });

        PanelExpandible panelExp = new PanelExpandible(tipo, pdp); // Usa el título completo seleccionado
        panelDetallesDinamicos.add(panelExp);
        panelDetallesDinamicos.revalidate();
        panelDetallesDinamicos.repaint();

    } else if (tipo.startsWith("CANCELERIA")) {
         PanelDetalleCanceleria pdC = new PanelDetalleCanceleria(materialesDisponibles, () -> {
            panelDetallesDinamicos.revalidate();
            panelDetallesDinamicos.repaint();
        });

         PanelExpandible panelExp = new PanelExpandible(tipo, pdC);
         panelDetallesDinamicos.add(panelExp);
         panelDetallesDinamicos.revalidate();
         panelDetallesDinamicos.repaint();
    }
    }//GEN-LAST:event_cbxTipoTrabajo1ActionPerformed

     public class PanelDetallePuertaAbatible extends JPanel {
        private JTextField txtMedidaH = new JTextField(8);
        private JTextField txtMedidaV = new JTextField(8);
        private JCheckBox ckMosquitero = new JCheckBox();
        private JTextField txtCantidad = new JTextField(8);
        private JTextField txtTipoCristal = new JTextField(12);
        private JTextField txtNoHojas = new JTextField(8);
        private JTextField txtPrecioUnidad = new JTextField(8);
        private JTextField txtSubtotal = new JTextField(8);
        private JTextField txtDescripcion = new JTextField(20);
    private JComboBox<TipoPuerta> cbxTipoPuerta = new JComboBox<>(TipoPuerta.values());
        private JCheckBox ckDuela = new JCheckBox();
        private JTextField txtTipoDuela = new JTextField(10);
        private JTextField txtMedDuela = new JTextField(8);

        private JCheckBox ckAdaptador = new JCheckBox();
        private JTextField txtTipoAdaptador = new JTextField(10);

        private JCheckBox ckJunquillo = new JCheckBox();
        private JTextField txtTipoJunquillo = new JTextField(10);

        private JCheckBox ckCanal = new JCheckBox();
        private JTextField txtTipoCanal = new JTextField(10);

        private JCheckBox ckPivote = new JCheckBox();
        private JTextField txtTipoPivote = new JTextField(10);
        private JTextField txtCantidadPivote = new JTextField(5);

        private JCheckBox ckJaladera = new JCheckBox();
        private JTextField txtTipoJaladera = new JTextField(10);
        private JTextField txtCantidadJaladera = new JTextField(5);

        private JCheckBox ckBarra = new JCheckBox();
        private JTextField txtTipoBarra = new JTextField(10);
        private JButton btnQuitar = new JButton("Quitar");

        private JPanel panelMateriales;
        private DefaultListModel<String> modeloMateriales = new DefaultListModel<>();
        private Map<Integer, BigDecimal> materialesSeleccionados = new HashMap<>();

        public PanelDetallePuertaAbatible(List<Material> materialesDisponibles, Runnable onRemove) {
            setLayout(new BorderLayout());

            // Panel con campos dentro de scroll interno
            JPanel panelCampos = new JPanel(new GridLayout(0, 2, 5, 5));
            panelCampos.add(new JLabel("Medida Horizontal:"));
            panelCampos.add(txtMedidaH);
            panelCampos.add(new JLabel("Medida Vertical:"));
            panelCampos.add(txtMedidaV);
            panelCampos.add(new JLabel("Mosquitero:"));
            panelCampos.add(ckMosquitero);
            panelCampos.add(new JLabel("Cantidad:")); 
            panelCampos.add(txtCantidad);
            panelCampos.add(new JLabel("Tipo Cristal:")); 
            panelCampos.add(txtTipoCristal);
            panelCampos.add(new JLabel("No. hojas:"));
            panelCampos.add(txtNoHojas);
            panelCampos.add(new JLabel("Precio unidad:")); 
            panelCampos.add(txtPrecioUnidad);
            panelCampos.add(new JLabel("Subtotal lÃ­nea:"));
            panelCampos.add(txtSubtotal);
            panelCampos.add(new JLabel("DescripciÃ³n:"));
            panelCampos.add(txtDescripcion);
            panelCampos.add(new JLabel("Tipo Puerta:")); 
            panelCampos.add(cbxTipoPuerta);

            panelCampos.add(new JLabel("Duela:")); 
            panelCampos.add(ckDuela);
            panelCampos.add(new JLabel("Tipo duela:")); 
            panelCampos.add(txtTipoDuela);
            panelCampos.add(new JLabel("Medida duela:"));
            panelCampos.add(txtMedDuela);

            panelCampos.add(new JLabel("Adaptador:")); panelCampos.add(ckAdaptador);
            panelCampos.add(new JLabel("Tipo adaptador:")); panelCampos.add(txtTipoAdaptador);

            panelCampos.add(new JLabel("Junquillo:")); panelCampos.add(ckJunquillo);
            panelCampos.add(new JLabel("Tipo junquillo:")); panelCampos.add(txtTipoJunquillo);

            panelCampos.add(new JLabel("Canal:")); panelCampos.add(ckCanal);
            panelCampos.add(new JLabel("Tipo canal:")); panelCampos.add(txtTipoCanal);

            panelCampos.add(new JLabel("Pivote:")); panelCampos.add(ckPivote);
            panelCampos.add(new JLabel("Tipo pivote:")); panelCampos.add(txtTipoPivote);
            panelCampos.add(new JLabel("Cantidad pivote:")); panelCampos.add(txtCantidadPivote);

            panelCampos.add(new JLabel("Jaladera:")); panelCampos.add(ckJaladera);
            panelCampos.add(new JLabel("Tipo jaladera:")); panelCampos.add(txtTipoJaladera);
            panelCampos.add(new JLabel("Cantidad jaladera:")); panelCampos.add(txtCantidadJaladera);

            panelCampos.add(new JLabel("Barra:")); panelCampos.add(ckBarra);
            panelCampos.add(new JLabel("Tipo barra:")); panelCampos.add(txtTipoBarra);


            JScrollPane scrollCampos = new JScrollPane(panelCampos);
            scrollCampos.setPreferredSize(new Dimension(450, 150));
            add(scrollCampos, BorderLayout.NORTH);

            // Panel de selecciÃ³n/agregado de materiales
            panelMateriales = new JPanel(new FlowLayout(FlowLayout.LEFT));
            panelMateriales.setBorder(BorderFactory.createTitledBorder("Materiales"));

            JComboBox<Material> cmbMaterial = new JComboBox<>(materialesDisponibles.toArray(new Material[0]));
            JTextField txtCantidad = new JTextField(5);
            JButton btnAgregar = new JButton("Agregar");
            JList<String> listaMateriales = new JList<>(modeloMateriales);

            btnAgregar.addActionListener(e -> {
                Material m = (Material) cmbMaterial.getSelectedItem();
                BigDecimal cantidad = new BigDecimal(txtCantidad.getText());
                modeloMateriales.addElement(m.getDescripcion() + " - " + cantidad);
                materialesSeleccionados.put(m.getIdMaterial(), cantidad);
                txtCantidad.setText("");
            });

            panelMateriales.add(new JLabel("Material:"));
            panelMateriales.add(cmbMaterial);
            panelMateriales.add(new JLabel("Cantidad:"));
            panelMateriales.add(txtCantidad);
            panelMateriales.add(btnAgregar);
            panelMateriales.add(new JScrollPane(listaMateriales));

            add(panelMateriales, BorderLayout.CENTER);

            // BotÃ³n quitar para eliminar este panel
            btnQuitar.addActionListener(e -> {
                Container parent = getParent();
                if(parent != null) {
                    parent.remove(this);
                    parent.revalidate();
                    parent.repaint();
                    onRemove.run();
                }
            });
            add(btnQuitar, BorderLayout.SOUTH);
        }
         public PuertaAbatibleDetalle getDetalle() {
            PuertaAbatibleDetalle detalle = new PuertaAbatibleDetalle();
            detalle.setMedidaHorizontal(new BigDecimal(txtMedidaH.getText()));
            detalle.setMedidaVertical(new BigDecimal(txtMedidaV.getText()));
            detalle.setMosquitero(ckMosquitero.isSelected());
            detalle.setCantidad(Integer.parseInt(txtCantidad.getText()));
detalle.setTipoCristal(txtTipoCristal.getText());
detalle.setNoHojas(Integer.parseInt(txtNoHojas.getText()));
detalle.setPrecioSoloUnaUnidadCalculado(new BigDecimal(txtPrecioUnidad.getText()));
detalle.setSubtotalLinea(new BigDecimal(txtSubtotal.getText()));
detalle.setDescripcion(txtDescripcion.getText());
TipoPuerta tipoPuerta = (TipoPuerta) cbxTipoPuerta.getSelectedItem();
detalle.setTipoPuerta(tipoPuerta); 
detalle.setDuela(ckDuela.isSelected());
detalle.setTipoDuela(txtTipoDuela.getText());
detalle.setMedidaDuela(new BigDecimal(txtMedDuela.getText()));

detalle.setAdaptador(ckAdaptador.isSelected());
detalle.setTipoAdaptador(txtTipoAdaptador.getText());

detalle.setJunquillo(ckJunquillo.isSelected());
detalle.setTipoJunquillo(txtTipoJunquillo.getText());

detalle.setCanal(ckCanal.isSelected());
detalle.setTipoCanal(txtTipoCanal.getText());

detalle.setPivote(ckPivote.isSelected());
detalle.setTipoPivote(txtTipoPivote.getText());
detalle.setCantidadPivote(Integer.parseInt(txtCantidadPivote.getText()));

detalle.setJaladera(ckJaladera.isSelected());
detalle.setTipoJaladera(txtTipoJaladera.getText());
detalle.setCantidadJaladera(Integer.parseInt(txtCantidadJaladera.getText()));

detalle.setBarra(ckBarra.isSelected());
detalle.setTipoBarra(txtTipoBarra.getText());

            return detalle;
        }

        public Map<Integer, BigDecimal> getMaterialesSeleccionados() {
            return materialesSeleccionados;
        }
    }
     
     public class PanelDetalleVentana extends JPanel {
    // --- Campos de datos del modelo ---
    private JTextField txtMedidaH = new JTextField(8);
    private JTextField txtMedidaV = new JTextField(8);
    private JTextField txtCantidad = new JTextField(5);
    private JTextField txtTipoCristal = new JTextField(12);
    private JTextField txtNoHojas = new JTextField(5);
    private JTextField txtPrecioUnidad = new JTextField(8);
    private JTextField txtSubtotal = new JTextField(8);
    private JTextField txtDescripcion = new JTextField(15);
    private JComboBox<TipoVentana> cmbTipoVentana = new JComboBox<>(TipoVentana.values());
    private JCheckBox ckMosquitero = new JCheckBox();
    private JCheckBox ckArco = new JCheckBox();
    private JTextField txtTipoArco = new JTextField(10);
    private JTextField txtMedidaArco = new JTextField(8);
    private JTextField txtTipoCanalillo = new JTextField(12);
    private JTextField txtMedidaCanalillo = new JTextField(8);

    public PanelDetalleVentana(List<Material> materialesDisponibles, Runnable onRemove) {
        setLayout(new BorderLayout());
        
        JPanel panelCampos = new JPanel(new GridLayout(0, 2, 6, 4));
        panelCampos.add(new JLabel("Medida horizontal:"));
        panelCampos.add(txtMedidaH);
        panelCampos.add(new JLabel("Medida vertical:"));
        panelCampos.add(txtMedidaV);
        panelCampos.add(new JLabel("Cantidad:"));
        panelCampos.add(txtCantidad);
        panelCampos.add(new JLabel("Tipo cristal:"));
        panelCampos.add(txtTipoCristal);
        panelCampos.add(new JLabel("No. hojas:"));
        panelCampos.add(txtNoHojas);
        panelCampos.add(new JLabel("Precio unidad:"));
        panelCampos.add(txtPrecioUnidad);
        panelCampos.add(new JLabel("Subtotal línea:"));
        panelCampos.add(txtSubtotal);
        panelCampos.add(new JLabel("Descripción:"));
        panelCampos.add(txtDescripcion);

        panelCampos.add(new JLabel("Tipo ventana:"));
        panelCampos.add(cmbTipoVentana);
        panelCampos.add(new JLabel("Mosquitero:"));
        panelCampos.add(ckMosquitero);
        panelCampos.add(new JLabel("Arco:"));
        panelCampos.add(ckArco);
        panelCampos.add(new JLabel("Tipo arco:"));
        panelCampos.add(txtTipoArco);
        panelCampos.add(new JLabel("Medida arco:"));
        panelCampos.add(txtMedidaArco);
        panelCampos.add(new JLabel("Tipo canalillo:"));
        panelCampos.add(txtTipoCanalillo);
        panelCampos.add(new JLabel("Medida canalillo:"));
        panelCampos.add(txtMedidaCanalillo);
        
        JScrollPane scrollCampos = new JScrollPane(panelCampos);
        scrollCampos.setPreferredSize(new Dimension(500, 200));
        add(scrollCampos, BorderLayout.CENTER);

        // Botón quitar (opcional, igual que en los otros paneles)
        JButton btnQuitar = new JButton("Quitar");
        btnQuitar.addActionListener(e -> {
            Container parent = getParent();
            if (parent != null) {
                parent.remove(this);
                parent.revalidate();
                parent.repaint();
                onRemove.run();
            }
        });
        add(btnQuitar, BorderLayout.SOUTH);
    }

    // --- Este método construye el objeto VentanaDetalle con todos los datos actuales del panel ---
    public VentanaDetalle getDetalle() {
        VentanaDetalle d = new VentanaDetalle();
        d.setMedidaHorizontal(new BigDecimal(txtMedidaH.getText()));
        d.setMedidaVertical(new BigDecimal(txtMedidaV.getText()));
        d.setCantidad(Integer.parseInt(txtCantidad.getText()));
        d.setTipoCristal(txtTipoCristal.getText());
        d.setNoHojas(Integer.parseInt(txtNoHojas.getText()));
        d.setPrecioSoloUnaUnidadCalculado(new BigDecimal(txtPrecioUnidad.getText()));
        d.setSubtotalLinea(new BigDecimal(txtSubtotal.getText()));
        d.setDescripcion(txtDescripcion.getText());

        d.setTipoVentana((TipoVentana) cmbTipoVentana.getSelectedItem());
        d.setMosquitero(ckMosquitero.isSelected());

        d.setArco(ckArco.isSelected());
        d.setTipoArco(txtTipoArco.getText());
        d.setMedidaArco(new BigDecimal(txtMedidaArco.getText()));
        d.setTipoCanalillo(txtTipoCanalillo.getText());
        d.setMedidaCanalillo(new BigDecimal(txtMedidaCanalillo.getText()));

        return d;
    }
}

     public class PanelDetalleCanceleria extends JPanel {
    // === Campos de cada propiedad ===
    private JTextField txtMedidaH = new JTextField(8);
    private JTextField txtMedidaV = new JTextField(8);
    private JTextField txtCantidad = new JTextField(5);
    private JTextField txtTipoCristal = new JTextField(12);
    private JTextField txtNoHojas = new JTextField(5);
    private JTextField txtPrecioUnidad = new JTextField(8);
    private JTextField txtSubtotal = new JTextField(8);
    private JTextField txtDescripcion = new JTextField(15);
    private JComboBox<TipoCanceleria> cmbTipoCanceleria = new JComboBox<>(TipoCanceleria.values());

    private JCheckBox ckBolsa = new JCheckBox();
    private JTextField txtNumFijosVerticales = new JTextField(5);
    private JTextField txtNumFijosHorizontales = new JTextField(5);

    private JTextField txtTipoTapa = new JTextField(10);
    private JTextField txtCantidadTapa = new JTextField(5);

    private JCheckBox ckZoclo = new JCheckBox();
    private JTextField txtTipoZoclo = new JTextField(10);

    private JCheckBox ckJunquillo = new JCheckBox();
    private JTextField txtTipoJunquillo = new JTextField(10);

    private JCheckBox ckArco = new JCheckBox();
    private JTextField txtTipoArco = new JTextField(10);
    private JTextField txtMedidaArco = new JTextField(8);

    private JCheckBox ckCanalillo = new JCheckBox();
    private JTextField txtTipoCanalillo = new JTextField(10);
    private JTextField txtMedidaCanalillo = new JTextField(8);

    public PanelDetalleCanceleria(List<Material> materialesDisponibles, Runnable onRemove) {
        setLayout(new BorderLayout());

        JPanel panelCampos = new JPanel(new GridLayout(0, 2, 6, 4));

        panelCampos.add(new JLabel("Medida horizontal:"));
        panelCampos.add(txtMedidaH);

        panelCampos.add(new JLabel("Medida vertical:"));
        panelCampos.add(txtMedidaV);

        panelCampos.add(new JLabel("Cantidad:"));
        panelCampos.add(txtCantidad);

        panelCampos.add(new JLabel("Tipo cristal:"));
        panelCampos.add(txtTipoCristal);

        panelCampos.add(new JLabel("No. hojas:"));
        panelCampos.add(txtNoHojas);

        panelCampos.add(new JLabel("Precio unidad:"));
        panelCampos.add(txtPrecioUnidad);

        panelCampos.add(new JLabel("Subtotal línea:"));
        panelCampos.add(txtSubtotal);

        panelCampos.add(new JLabel("Descripción:"));
        panelCampos.add(txtDescripcion);

        panelCampos.add(new JLabel("Tipo cancelería:"));
        panelCampos.add(cmbTipoCanceleria);

        panelCampos.add(new JLabel("Bolsa:"));
        panelCampos.add(ckBolsa);

        panelCampos.add(new JLabel("Fijos verticales:"));
        panelCampos.add(txtNumFijosVerticales);

        panelCampos.add(new JLabel("Fijos horizontales:"));
        panelCampos.add(txtNumFijosHorizontales);

        panelCampos.add(new JLabel("Tipo tapa:"));
        panelCampos.add(txtTipoTapa);

        panelCampos.add(new JLabel("Cantidad tapa:"));
        panelCampos.add(txtCantidadTapa);

        panelCampos.add(new JLabel("Zoclo:"));
        panelCampos.add(ckZoclo);

        panelCampos.add(new JLabel("Tipo zoclo:"));
        panelCampos.add(txtTipoZoclo);

        panelCampos.add(new JLabel("Junquillo:"));
        panelCampos.add(ckJunquillo);

        panelCampos.add(new JLabel("Tipo junquillo:"));
        panelCampos.add(txtTipoJunquillo);

        panelCampos.add(new JLabel("Arco:"));
        panelCampos.add(ckArco);

        panelCampos.add(new JLabel("Tipo arco:"));
        panelCampos.add(txtTipoArco);

        panelCampos.add(new JLabel("Medida arco:"));
        panelCampos.add(txtMedidaArco);

        panelCampos.add(new JLabel("Canalillo:"));
        panelCampos.add(ckCanalillo);

        panelCampos.add(new JLabel("Tipo canalillo:"));
        panelCampos.add(txtTipoCanalillo);

        panelCampos.add(new JLabel("Medida canalillo:"));
        panelCampos.add(txtMedidaCanalillo);

        JScrollPane scrollCampos = new JScrollPane(panelCampos);
        scrollCampos.setPreferredSize(new Dimension(500, 250));
        add(scrollCampos, BorderLayout.CENTER);

        // Botón quitar, igual que otros paneles
        JButton btnQuitar = new JButton("Quitar");
        btnQuitar.addActionListener(e -> {
            Container parent = getParent();
            if (parent != null) {
                parent.remove(this);
                parent.revalidate();
                parent.repaint();
                onRemove.run();
            }
        });
        add(btnQuitar, BorderLayout.SOUTH);
    }

    // --- Crea el objeto CanceleriaFijaDetalle según el modelo ---
    public CanceleriaFijaDetalle getDetalle() {
        CanceleriaFijaDetalle d = new CanceleriaFijaDetalle();
        d.setMedidaHorizontal(new BigDecimal(txtMedidaH.getText()));
        d.setMedidaVertical(new BigDecimal(txtMedidaV.getText()));
        d.setCantidad(Integer.parseInt(txtCantidad.getText()));
        d.setTipoCristal(txtTipoCristal.getText());
        d.setNoHojas(Integer.parseInt(txtNoHojas.getText()));
        d.setPrecioSoloUnaUnidadCalculado(new BigDecimal(txtPrecioUnidad.getText()));
        d.setSubtotalLinea(new BigDecimal(txtSubtotal.getText()));
        d.setDescripcion(txtDescripcion.getText());
        d.setTipoCanceleria((TipoCanceleria) cmbTipoCanceleria.getSelectedItem());

        d.setBolsa(ckBolsa.isSelected());
        d.setNumFijosVerticales(Integer.parseInt(txtNumFijosVerticales.getText()));
        d.setNumFijosHorizontales(Integer.parseInt(txtNumFijosHorizontales.getText()));

        d.setTipoTapa(txtTipoTapa.getText());
        d.setCantidadTapa(Integer.parseInt(txtCantidadTapa.getText()));

        d.setZoclo(ckZoclo.isSelected());
        d.setTipoZoclo(txtTipoZoclo.getText());

        d.setJunquillo(ckJunquillo.isSelected());
        d.setTipoJunquillo(txtTipoJunquillo.getText());

        d.setArco(ckArco.isSelected());
        d.setTipoArco(txtTipoArco.getText());
        d.setMedidaArco(new BigDecimal(txtMedidaArco.getText()));

        d.setCanalillo(ckCanalillo.isSelected());
        d.setTipoCanalillo(txtTipoCanalillo.getText());
        d.setMedidaCanalillo(new BigDecimal(txtMedidaCanalillo.getText()));

        return d;
    }
}

        
 private void cargarMaterialesDisponibles() {
        materialesDisponibles = new ArrayList<>();
        materialesDisponibles.add(new Material(1, "Vidrio", new BigDecimal("150.5"), 50, Material.TipoMaterial.Vidrio));
        materialesDisponibles.add(new Material(2, "Aluminio", new BigDecimal("300.0"), 30, Material.TipoMaterial.Aluminio));
        materialesDisponibles.add(new Material(3, "Accesorio", new BigDecimal("80.0"), 100, Material.TipoMaterial.Accesorio));
    }
public class PanelExpandible extends JPanel {
    private final JPanel contenido;
    private final JButton btnToggle;
    private boolean estaVisible = true;

    public PanelExpandible(String titulo, JPanel contenido) {
        this.contenido = contenido;
        setLayout(new BorderLayout());

        btnToggle = new JButton("▼ " + titulo);
        btnToggle.setFocusPainted(false);
        btnToggle.setBorderPainted(false);
        btnToggle.setContentAreaFilled(false);
        btnToggle.setHorizontalAlignment(SwingConstants.LEFT);
        btnToggle.addActionListener(e -> toggleContenido());

        add(btnToggle, BorderLayout.NORTH);
        add(contenido, BorderLayout.CENTER);
    }

    private void toggleContenido() {
        estaVisible = !estaVisible;
        contenido.setVisible(estaVisible);
        btnToggle.setText((estaVisible ?  "▼ " : "► ") + btnToggle.getText().substring(2));
        revalidate();
        repaint();
    }
}
    /**
         * @param args the command line arguments
         */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmCrearCotizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmCrearCotizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmCrearCotizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmCrearCotizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmCrearCotizacion().setVisible(true);
            }
        });
    }

    /*private void cargarClientes() {
        try (Connection conexion = Conexion.getConnection()) {
            ClienteDAO clienteDAO = new ClienteDAO(conexion);
            clientes = clienteDAO.obtenerTodos();

            cbxSeleccionarCliente.removeAllItems();
            for (Cliente c : clientes) {
                cbxSeleccionarCliente.addItem(c.getNombre());
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar clientes: " + ex.getMessage());
        }
    }*/
    private void cargarClientes() {
        try (Connection conexion = Conexion.getConnection()) {
            ClienteDAO clienteDAO = new ClienteDAO(conexion);
            clientes = clienteDAO.obtenerTodos();

            if (clientes != null && !clientes.isEmpty()) {
                cbxSeleccionarCliente.setModel(new DefaultComboBoxModel<>(
                        clientes.stream().map(Cliente::getNombre).toArray(String[]::new)
                ));
            } else {
                cbxSeleccionarCliente.setModel(new DefaultComboBoxModel<>(new String[]{"No hay clientes"}));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar clientes: " + ex.getMessage());
        }
    }

    private void filtrarClientes(String texto) {
        cbxSeleccionarCliente.removeAllItems();
        for (Cliente c : clientes) {
            if (c.getNombre().toLowerCase().contains(texto.toLowerCase())) {
                cbxSeleccionarCliente.addItem(c.getNombre());
            }
        }
    }



    private void cargarTiposTrabajo() {
        cbxTipoTrabajo1.removeAllItems(); // Ventanas 
         cbxTipoTrabajo1.addItem("Selecciona un tipo de trabajo...");
        for (TipoVentana tv : TipoVentana.values()) {
            cbxTipoTrabajo1.addItem("VENTANA - " + tv.getDescripcion());
        } // Puertas 
        for (TipoPuerta tp : TipoPuerta.values()) {
            cbxTipoTrabajo1.addItem("PUERTA - " + tp.getDescripcion());
        } // Cancelería 
        for (TipoCanceleria tc : TipoCanceleria.values()) {
            cbxTipoTrabajo1.addItem("CANCELERIA - " + tc.getDescripcion());
        }
    }

  


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Buscar;
    private javax.swing.JLabel ConsultarCotizacion;
    private javax.swing.JLabel Descuento;
    private javax.swing.JButton btnCrearCliente;
    private javax.swing.JButton btnDescargar;
    private javax.swing.JButton btnDescartar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnVistaPrevia;
    private javax.swing.JComboBox<String> cbxSeleccionarCliente;
    private javax.swing.JComboBox<String> cbxTipoTrabajo1;
    private javax.swing.JCheckBox ckbxDescuentoNo;
    private javax.swing.JCheckBox ckbxDescuentoSi;
    private javax.swing.JLabel iconoCrear;
    private javax.swing.JLabel iconoTitulo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelPorsentaje;
    private javax.swing.JPanel panelBotones;
    private javax.swing.JPanel panelBuscarCliente;
    private javax.swing.JPanel panelDescuento;
    private javax.swing.JPanel panelSubtitulo;
    private javax.swing.JPanel panelTipoTrabajo;
    private javax.swing.JPanel panelTitulo;
    private javax.swing.JPanel panelTituloDetalle;
    private javax.swing.JScrollPane scrollDetallesDinamicos;
    private javax.swing.JLabel tituloTipoTrabajo;
    private javax.swing.JTextField txtBuscarCliente;
    private javax.swing.JTextField txtDescuento;
    // End of variables declaration//GEN-END:variables
}
